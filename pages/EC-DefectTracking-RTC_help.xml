<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta name="generator" content=
  "HTML Tidy for Windows (vers 25 March 2009), see www.w3.org" />
  <meta content="text/html; charset=us-ascii" http-equiv=
  "content-type" />
  <title>ElectricFlow Plugin for @PLUGIN_KEY@</title>
  <link rel="stylesheet" href=
  "../../plugins/@PLUGIN_KEY@/pluginhelp.css" type="text/css"
  media="screen" />
</head>

<body>
  <div class="help">
    <h1>Rational Team Concert</h1>

    <p>Plugin Version @PLUGIN_VERSION@</p>
    <hr style=
    "margin-left: -10px; margin-top: 10px; height: 1px; width: 100%; color: #5981BD;"
    noshade="noshade" />    <p>Revised on January 11, 2019</p>
    <h1>Contents</h1>	<ul>	<li><p><a href="#overview">Overview</a></p></li>	<li><p><a href="#setupconfig">Setting Up the Plugin Configuration</a></p></li>	<li><p><a href="#procedures">Plugin Procedures</a></p></li>	<li><p><a href="#example">Examples and Use Cases</a></p></li>	<li><p><a href="#rns">Release Notes</a></p></li>	</ul>	<h1 id="overview">Overview</h1>
    <!-- The tool description should answer these kinds of questions:
    What is the tool itself is used for in the development
    process? Who would use this tool? What is the general use-case or
    problem that this tool solves? Look at the tool's documentation or
    website(s) to get their own descriptions. Look at Wikipedia or other
    outside websites. If there is a Hudson plugin, read their
    documentation for ideas, examples, etc. It's OK to copy word-for-word
    only if appropriate, such as FOSS - but not commercial software.
    -->

    <p>Rational Team Concert provides a single, integrated
    environment for several aspects of the software development
    process, including agile planning, process definition, source
    control, defect tracking, build management, and reporting.
    Users can use the software to track and manage the
    relationships between artifacts, promote best practices for
    development, and gather project information.</p>

    <p>In the product, users create work items to track tasks, such
    as enhancements, defects, or plan items. Among many other
    things, users can include these work items in plans for
    specific milestones and can link work items to source code.
    When a user creates or changes a work item, all members in the
    associated team are notified.</p>

    <h2>Rational Team Concert Links</h2>

    <p>More information can be found at <a href=
    "https://jazz.net/projects/rational-team-concert/">this
    website</a>.</p>

    <h2>ElectricFlow Integration to Rational Team
    Concert</h2><!-- The integration description should answer the questions:
    How deep does our integration go? Why should I care? What general
    functionality does the plugin include? What functionality does
    the plugin omit?
    -->

    <p>The @PLUGIN_KEY@ plugin enables you to create, update, and
    link Rational Team Concert defects to an ElectricFlow job. This
    plugin also links to a new report that contains information
    from the Rational Team Concert server about what was linked,
    updated, or created.</p>

    <h2>Notes</h2>

    <ul>
      <li>This plugin requires the RTC Client Java libraries provided
      by IBM to communicate with the RTC server.  See the
      "README.txt" file in the plugin's agent directory for more
      information on how to obtain the required libraries and details
      on how to install and test them.
      </li>
      <li>You must configure the Rational Team Concert server      before using the plugin.</li>
      <li>Access to the RTC server is
      required to use this plugin.</li>
    </ul>

    <h2>Integrated Version</h2>

    <p>This plugin was developed and tested against version 4.0.2.</p>
    <h1 id="setupconfig">Setting Up the Plugin Configuration</h1>		    <div id="CreateConfiguration">      <a name='CreateConfiguration' id="CreateConfiguration"></a>      <!-- If the plugin has separate configurations then include this section,    otherwise omit this whole section. We don't need to have a configuration    section that just says "There is no configuration for this plugin."    -->      <p>        Plugin configurations are sets of parameters that apply        across some or all of the plugin's procedures. They reduce repetition of common values, create        predefined sets of parameters for end users, and         securely store credentials where needed. Each configuration        is given a unique name that is entered in designated        parameters on procedures that use them.<br /><br />      </p>      <!-- For all parameters, the parameter name should be *exactly* the same as it appears in the    Parameter Panel, and the first sentence(s) of the description should be    the same as the tooltip (if there is one). After that, the parameter    description can go into greater detail about the parameter including    valid value ranges and examples.    -->		<p>IMPORTANT: In the ElectricFlow UI, go to the Home page, open the Main Menu, and click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</p>    <p>IMPORTANT: For all parameter descriptions below, required parameters are shown in <span class='required'>bold italics</span>.</p>      <table class="grid">        <thead>          <tr>            <th>Parameter</th>            <th>Description</th>          </tr>        </thead>        <tbody>          <tr>            <td class='required'>Configuration Name</td>            <td>Provide a unique name for the configuration. Keep in mind that you might need to create additional            configurations over time. (Required)</td>          </tr>          <tr>            <td>Description</td>            <td>Provide a text description for your            reference only. ElectricFlow does not use this            information.</td>          </tr>          <tr>            <td class='required'>User Name</td>            <td>Provide the user name to connect to the            specified Rational Team Concert URL. (Required)</td>          </tr>          <tr>            <td class='required'>Password and Retype Password</td>            <td>Provide the password to connect to the specified            Rational Team Concert URL. (Required)</td>          </tr>          <tr>            <td class='required'>URL</td>            <td>Provide the URL to connect to a Rational Team            Concert server. For example, http://10.10.10.10:8080 or            http://yourRTCsserver. (Required)</td>          </tr>          <tr>            <td class='required'>Project Name</td>            <td>Provide a unique project name for this configuration.            (Required)</td>          </tr>        </tbody>      </table>    </div>
    <h1 id="procedures">Plugin Procedures</h1>
	<p>IMPORTANT: In the ElectricFlow UI, go to the Home page, open the Main Menu, and click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</p>	<p>IMPORTANT: For all parameter descriptions below, required parameters are shown in <span class='required'>bold italics</span>.</p>

    <div id="LinkDefects"><a name='LinkDefects' id=
    "LinkDefects"></a>

    <h3>Link Defects</h3>

    <p>This links existing defects to a job.</p>

    <table class="grid">
      <thead>
        <tr>
          <th>Parameter</th>

          <th>Description</th>
        </tr>
      </thead>

      <tbody>
        <tr>
          <td class='required'>Configuration Name</td>

          <td>Provide the name of your RTC defect tracking
          configuration, or leave it blank to use the "default"
          configuration. (Required)</td>
        </tr>

        <tr>
          <td>Prefix</td>

          <td>Provide the key used by RTC as the prefix for defects
          within a project. If this field is blank, a regular
          expression is used to try to match defect IDs.</td>
        </tr>

        <tr>
          <td>Property To Parse</td>

          <td>Provide the property or property sheet used to search
          for defect IDs. If this field is blank, the default
          property "/myJob/ecscm_changeLogs" is used.</td>
        </tr>
      </tbody>
    </table><img src=
    "../../plugins/@PLUGIN_KEY@/images/DefectRTC-2.png" alt=
    "" /></div>

    <div id="UpdateDefects"><a name='UpdateDefects' id=
    "UpdateDefects"></a>

    <h3>Update Defects</h3>

    <p>This enables defects associated with a job to be
    automatically updated in the RTC system. Defects are associated
    with a job, if they are in a comma-separated list in a job
    property or parameter called "/myJob/defectsToUpdate". Updating
    a defect in the RTC system refers to changing its state to the
    state specified in "/myJob/defectsToUpdate".</p>

    <table class="grid">
      <thead>
        <tr>
          <th>Parameter</th>

          <th>Description</th>
        </tr>
      </thead>

      <tbody>
        <tr>
          <td class='required'>Configuration Name</td>

          <td>Provide the name of your RTC defect tracking
          configuration, or leave it blank to use the "default"
          configuration. (Required)</td>
        </tr>

        <tr>
          <td class='required'>Property Path</td>

          <td>Provide the path to the property, if the property
          containing the list of defects to update is somewhere
          other than "/myJob/defectsToUpdate".</td>
        </tr>
      </tbody>
    </table><img src=
    "../../plugins/@PLUGIN_KEY@/images/DefectRTC-3.png" alt=
    "" /></div>

    <div id="CreateDefects"><a name='CreateDefects' id=
    "CreateDefects"></a>

    <h3>Create Defects</h3>

    <p>This enables defect creation based on a test failure in an
    ElectricFlow job. Defects can be created automatically or
    manually. The Create Defects procedure reads previously-stored
    properties to create defects with proper values. The
    best way to store the properties is to add a postp matcher to
    the step that might fail. For an example postp matcher, click <a href=
    "../../plugins/@PLUGIN_KEY@/PostP.txt">here</a>.</p>

    <table class="grid">
      <thead>
        <tr>
          <th>Parameter</th>

          <th>Description</th>
        </tr>
      </thead>

      <tbody>
        <tr>
          <td class='required'>Configuration Name</td>

          <td>Provide the name of your RTC defect tracking
          configuration, or leave it blank to use the "default"
          configuration. (Required)</td>
        </tr>

        <tr>
          <td class='required'>RTC Project Name</td>

          <td>Provide the name of the Rational Team Concert
          project. (Required)</td>
        </tr>

        <tr>
          <td>Creation Mode</td>

          <td>Select Automatic, if the defects should be created
          during job execution without user input. Select Manual to
          require a user to manually submit a defect from a Defect
          Report page linked to a Job Details page.</td>
        </tr>
      </tbody>
    </table><img src=
    "../../plugins/@PLUGIN_KEY@/images/DefectRTC-4.png" alt=
    "" /></div>

    <h1 id="example">Examples and Use Cases</h1>
    <!-- This section is for examples and use cases, including screenshots of the new Parameter Panel with example values filled in.
    Unfortunately, I can't tell you what exactly to put here, but it's OK to put what seems like too much! Include both parameter
    values and output where appropriate. Use a separate 'h2' header for each example. Under the h2 header try to stay with the style
    outline used above where possible.
    -->

    <h2>New @PLUGIN_KEY@ Configuration</h2><img src=
    "../../plugins/@PLUGIN_KEY@/images/DefectRTC-1.png" alt="" />

    <h2>Job Details and RTC Report Link</h2><img src=
    "../../plugins/@PLUGIN_KEY@/images/DefectRTC-5.png" alt="" />

    <h2>RTC Report Example</h2><img src=
    "../../plugins/@PLUGIN_KEY@/images/DefectRTC-6.png" alt="" />

    <h1 id="rns">Release Notes</h1>
    <!-- Specific descriptions of additional or changed functionality,
    new parameters, etc. The plugin version header of this section should
    include the speciic build number if possible. Repeat this section for
    each version.
    -->
    <h2>@PLUGIN_KEY@-2.1.2</h2>
    <ul>
        <li>The plugin icon has been updated.</li>
    </ul>
    <h2>@PLUGIN_KEY@-2.1.1</h2>    <ul>        <li>Renamed ElectricCommander to ElectricFlow.</li>    </ul>    
    <h2>@PLUGIN_KEY@-2.1.0</h2>

    <ul>
        <li>Restructured the RTC Client application into a simple "jar" file.</li>
        <li>Updated the plugin to support RTC version 4.0 (the plugin
            now uses the 4.0.2 RTC Java Client libraries).</li>
        <li>Removed constraints that limited the plugin to RTC work items
            of only type "Defect" with only the "Bugzilla" lifecycle.</li>
        <li>Removed hardcoded usage of resource "local" for some
            subprocedures.</li>
    </ul>

    <h2>@PLUGIN_KEY@-2.0.4</h2>

    <ul>
        <li>Changed procedure names in the step picker section.</li>
    </ul>

    <h2>@PLUGIN_KEY@-2.0.3</h2>

    <ul>
      <li>Changed the Help page style.</li>
    </ul>

    <h2>@PLUGIN_KEY@-2.0.2</h2>

    <ul>
      <li>Fixed Category name.</li>
    </ul>

    <h2>@PLUGIN_KEY@-2.0.1</h2>

    <ul>
      <li>Added a Help link to procedures.</li>
    </ul>

    <h2>@PLUGIN_KEY@-2.0.0</h2>

    <ul>
      <li>Updated the Help Page.</li>

      <li>Added new parameter panels.</li>
    </ul>
  </div>
</body>
</html>
